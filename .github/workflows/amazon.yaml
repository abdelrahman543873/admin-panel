# name: Deploy to Amazon ECS

# on:
#   push:
#     branches:
#       - main

# env:
#   AWS_REGION: us-east-1
#   ECS_CLUSTER: main
#   BACKEND_TASK_DEFINITION: backend/backend-task-definition.json
#   FRONTEND_TASK_DEFINITION: frontend/frontend-task-definition.json
#   BACKEND_CONTAINER_NAME: admin-backend
#   FRONTEND_CONTAINER_NAME: admin-frontend
#   BACKEND_ECS_SERVICE: admin-backend
#   FRONTEND_ECS_SERVICE: admin-frontend
#   BACKEND_ECR_REPOSITORY: admin
#   FRONTEND_ECR_REPOSITORY: frontend

# jobs:
#   changes:
#     runs-on: ubuntu-latest
#     outputs:
#       backend: ${{ steps.filter.outputs.backend }}
#       frontend: ${{ steps.filter.outputs.frontend }}
#     steps:
#       - uses: actions/checkout@v2
#       - uses: dorny/paths-filter@v2
#         id: filter
#         with:
#           filters: |
#             backend:
#               - 'backend/**'
#             frontend:
#               - 'frontend/**'

#   BACKEND:
#     needs: changes
#     if: needs.changes.outputs.backend == 'true'
#     name: BACKEND
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
#         with:
#           aws-access-key-id: AKIA6IKA6RCZYFMFFP5Z
#         aws-secret-access-key: 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
#         aws-region: us-east-1

#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

#     - name: Build, tag, and push image to Amazon ECR
#       id: build-image
#       env:
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         IMAGE_TAG: ${{ github.sha }}
#       run: |
#         # Build a docker container and
#         # push it to ECR so that it can
#         # be deployed to ECS.
#         docker build -f backend/Dockerfile -t $ECR_REGISTRY/$BACKEND_ECR_REPOSITORY:$IMAGE_TAG .
#         docker push $ECR_REGISTRY/$BACKEND_ECR_REPOSITORY:$IMAGE_TAG
#         echo "::set-output name=image::$ECR_REGISTRY/$BACKEND_ECR_REPOSITORY:$IMAGE_TAG"

#     - name: Fill in the new image ID in the Amazon ECS task definition
#       id: task-def
#       uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
#       with:
#         task-definition: ${{ env.BACKEND_TASK_DEFINITION }}
#         container-name: ${{ env.BACKEND_CONTAINER_NAME }}
#         image: ${{ steps.build-image.outputs.image }}

#     - name: Deploy Amazon ECS task definition
#       uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#       with:
#         task-definition: ${{ steps.task-def.outputs.task-definition }}
#         service: ${{ env.BACKEND_ECS_SERVICE }}
#         cluster: ${{ env.ECS_CLUSTER }}
#         wait-for-service-stability: true
# Frontend:
#   needs: changes
#   if: needs.changes.outputs.frontend == 'true'
#   name: Frontend
#   runs-on: ubuntu-latest
#   steps:
#     - name: Checkout
#       uses: actions/checkout@v3

#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
#       with:
#         aws-access-key-id: AKIA6IKA6RCZYFMFFP5Z
#         aws-secret-access-key: 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
#         aws-region: us-east-1

#     - name: Login to Amazon ECR
#       id: login-ecr
#       uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

#     - name: Setup Node.js
#       uses: actions/setup-node@v2
#       with:
#         node-version: 16

#     - name: install angular CLI
#       run: npm install -g @angular/cli

#     - name: Install dependencies
#       run: yarn
#       working-directory: frontend

#     - name: push to s3 bucket
#       run: npx cross-env NG_DEPLOY_AWS_ACCESS_KEY_ID=AKIA6IKA6RCZYFMFFP5Z NG_DEPLOY_AWS_SECRET_ACCESS_KEY=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 NG_DEPLOY_AWS_BUCKET=admin-frontend123 NG_DEPLOY_AWS_REGION=us-east-1 ng deploy
#       working-directory: frontend
